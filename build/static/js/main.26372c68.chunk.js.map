{"version":3,"sources":["constants/postConstants.js","constants/userConstants.js","store.js","reducers/postReducers.js","reducers/userReducers.js","components/Footer.js","actions/userActions.js","components/Header.js","components/Post.js","actions/postActions.js","components/Message.js","components/Loader.js","components/Paginate.js","screens/HomeScreen.js","components/TopRated.js","screens/PostsScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/PostListScreen.js","screens/PostEditScreen.js","screens/ProfileScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","components/RoutesContainer.js","screens/HealthScreen.js","screens/NewsScreen.js","screens/StoryScreen.js","screens/SportScreen.js","App.js","index.js"],"names":["POST_LIST_REQUEST","POST_LIST_SUCCESS","POST_LIST_FAIL","POST_DETAILS_REQUEST","POST_DETAILS_SUCCESS","POST_DETAILS_FAIL","POST_TOP_REQUEST","POST_TOP_SUCCESS","POST_TOP_FAIL","POST_CREATE_REQUEST","POST_CREATE_SUCCESS","POST_CREATE_FAIL","POST_CREATE_RESET","POST_UPDATE_REQUEST","POST_UPDATE_SUCCESS","POST_UPDATE_FAIL","POST_UPDATE_RESET","POST_DELETE_REQUEST","POST_DELETE_SUCCESS","POST_DELETE_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","reducer","combineReducers","postList","state","posts","action","type","loading","payload","pages","page","error","postDetails","post","postCreate","success","postUpdate","postDelete","postTopRated","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","initialState","localStorage","getItem","JSON","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","Footer","Container","Row","Col","className","logout","dispatch","removeItem","getUserDetails","id","getState","a","config","headers","Authorization","token","axios","get","data","message","response","Header","useDispatch","useSelector","Navbar","bg","expand","Brand","to","Image","src","alt","width","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","title","name","Item","onClick","isAdmin","Post","image","description","substring","_id","icon","faClock","timeToRead","category","listPosts","keyword","pageNumber","listPostDetails","Message","variant","children","Alert","defaultProps","Loader","Spinner","animation","role","style","height","margin","display","Paginate","Pagination","Array","keys","map","x","active","HomeScreen","match","params","useEffect","TopRated","PostsScreen","descriptionDetails","images","href","faFacebook","faInstagram","faTwitter","FormContainer","xs","md","LoginScreen","location","history","useState","email","setEmail","password","setPassword","redirect","search","split","push","Form","onSubmit","e","preventDefault","setItem","stringify","login","Group","controlId","Label","Control","placeholder","value","onChange","target","Button","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","PostListScreen","loadingDelete","errorDelete","successDelete","loadingCreate","errorCreate","successCreate","createdPost","deleteHandler","window","confirm","delete","deletePost","faPlus","Table","striped","bordered","hover","responsive","faEdit","faTrash","PostEditScreen","postId","setImage","setCategory","setDescription","setImages","setDescriptionDetails","setTimeToRead","uploading","setUploading","loadingUpdate","errorUpdate","successUpdate","uploadFileHandler","file","files","formData","FormData","append","console","put","updatePost","File","label","custom","as","size","ProfileScreen","updateUserProfile","UserListScreen","deleteUser","faCheck","color","faTimes","UserEditScreen","userId","setIsAdmin","updateUser","Check","checked","RoutesContainer","HealthScreen","NewsScreen","StoryScreen","SportScreen","App","path","component","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.26372c68.chunk.js","sourcesContent":["export const POST_LIST_REQUEST = 'POST_LIST_REQUEST';\r\nexport const POST_LIST_SUCCESS = 'POST_LIST_SUCCESS';\r\nexport const POST_LIST_FAIL = 'POST_LIST_FAIL';\r\n\r\nexport const POST_DETAILS_REQUEST = 'POST_DETAILS_REQUEST';\r\nexport const POST_DETAILS_SUCCESS = 'POST_DETAILS_SUCCESS';\r\nexport const POST_DETAILS_FAIL = 'POST_DETAILS_FAIL';\r\n\r\nexport const POST_TOP_REQUEST = 'POST_TOP_REQUEST';\r\nexport const POST_TOP_SUCCESS = 'POST_TOP_SUCCESS';\r\nexport const POST_TOP_FAIL = 'POST_TOP_FAIL';\r\n\r\nexport const POST_CREATE_REQUEST = 'POST_CREATE_REQUEST';\r\nexport const POST_CREATE_SUCCESS = 'POST_CREATE_SUCCESS';\r\nexport const POST_CREATE_FAIL = 'POST_CREATE_FAIL';\r\nexport const POST_CREATE_RESET = 'POST_CREATE_RESET';\r\n\r\nexport const POST_UPDATE_REQUEST = 'POST_UPDATE_REQUEST';\r\nexport const POST_UPDATE_SUCCESS = 'POST_UPDATE_SUCCESS';\r\nexport const POST_UPDATE_FAIL = 'POST_UPDATE_FAIL';\r\nexport const POST_UPDATE_RESET = 'POST_UPDATE_RESET';\r\n\r\nexport const POST_DELETE_REQUEST = 'POST_DELETE_REQUEST';\r\nexport const POST_DELETE_SUCCESS = 'POST_DELETE_SUCCESS';\r\nexport const POST_DELETE_FAIL = 'POST_DELETE_FAIL';\r\n\r\nexport const POST_LIKE = 'POST_LIKE';\r\nexport const POST_UNLIKE = 'POST_UNLIKE';\r\nexport const LIKE_ERROR = 'LIKE_ERROR';\r\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST';\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS';\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL';\r\nexport const USER_LOGOUT = 'USER_LOGOUT';\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST';\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS';\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL';\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST';\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS';\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL';\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET';\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST';\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS';\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL';\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET';\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST';\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS';\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL';\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET';\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST';\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS';\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL';\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST';\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS';\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL';\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET';\r\n","import {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport {\r\n  postListReducer,\r\n  postDetailsReducer,\r\n  postCreateReducer,\r\n  postUpdateReducer,\r\n  postDeleteReducer,\r\n  postTopRatedReducer,\r\n} from './reducers/postReducers';\r\nimport {\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n  userDetailsReducer,\r\n  userListReducer,\r\n  userDeleteReducer,\r\n  userUpdateProfileReducer,\r\n  userUpdateReducer,\r\n} from './reducers/userReducers';\r\nconst reducer = combineReducers({\r\n  postList: postListReducer,\r\n  postDetails: postDetailsReducer,\r\n  postCreate: postCreateReducer,\r\n  postUpdate: postUpdateReducer,\r\n  postDelete: postDeleteReducer,\r\n  postTopRated: postTopRatedReducer,\r\n\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userDetails: userDetailsReducer,\r\n  userUpdateProfile: userUpdateProfileReducer,\r\n  userList: userListReducer,\r\n  userDelete: userDeleteReducer,\r\n  userUpdate: userUpdateReducer,\r\n});\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n  ? JSON.parse(localStorage.getItem('userInfo'))\r\n  : null;\r\n\r\nconst initialState = {\r\n  userLogin: {userInfo: userInfoFromStorage},\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import {\r\n  POST_LIST_REQUEST,\r\n  POST_LIST_SUCCESS,\r\n  POST_LIST_FAIL,\r\n  POST_DETAILS_REQUEST,\r\n  POST_DETAILS_SUCCESS,\r\n  POST_DETAILS_FAIL,\r\n  POST_TOP_REQUEST,\r\n  POST_TOP_SUCCESS,\r\n  POST_TOP_FAIL,\r\n  POST_CREATE_REQUEST,\r\n  POST_CREATE_SUCCESS,\r\n  POST_CREATE_FAIL,\r\n  POST_CREATE_RESET,\r\n  POST_UPDATE_REQUEST,\r\n  POST_UPDATE_SUCCESS,\r\n  POST_UPDATE_FAIL,\r\n  POST_UPDATE_RESET,\r\n  POST_DELETE_REQUEST,\r\n  POST_DELETE_SUCCESS,\r\n  POST_DELETE_FAIL,\r\n} from '../constants/postConstants';\r\n\r\nexport const postListReducer = (state = {posts: []}, action) => {\r\n  switch (action.type) {\r\n    case POST_LIST_REQUEST:\r\n      return {loading: true, posts: []};\r\n    case POST_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        posts: action.payload.posts,\r\n        pages: action.payload.pages,\r\n        page: action.payload.page,\r\n      };\r\n    case POST_LIST_FAIL:\r\n      return {loading: false, error: action.payload};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const postDetailsReducer = (state = {post: {}}, action) => {\r\n  switch (action.type) {\r\n    case POST_DETAILS_REQUEST:\r\n      return {...state, loading: true};\r\n    case POST_DETAILS_SUCCESS:\r\n      return {loading: false, post: action.payload};\r\n    case POST_DETAILS_FAIL:\r\n      return {loading: false, post: action.payload};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const postCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case POST_CREATE_REQUEST:\r\n      return {loading: true};\r\n    case POST_CREATE_SUCCESS:\r\n      return {loading: false, success: true, post: action.payload};\r\n    case POST_CREATE_FAIL:\r\n      return {loading: false, error: action.payload};\r\n    case POST_CREATE_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const postUpdateReducer = (state = {post: {}}, action) => {\r\n  switch (action.type) {\r\n    case POST_UPDATE_REQUEST:\r\n      return {loading: true};\r\n    case POST_UPDATE_SUCCESS:\r\n      return {loading: false, success: true, post: action.payload};\r\n    case POST_UPDATE_FAIL:\r\n      return {loading: false, error: action.payload};\r\n    case POST_UPDATE_RESET:\r\n      return {post: {}};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const postDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case POST_DELETE_REQUEST:\r\n      return {loading: true};\r\n    case POST_DELETE_SUCCESS:\r\n      return {loading: false, success: true};\r\n    case POST_DELETE_FAIL:\r\n      return {loading: false, error: action.payload};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const postTopRatedReducer = (state = {posts: []}, action) => {\r\n  switch (action.type) {\r\n    case POST_TOP_REQUEST:\r\n      return {loading: true, posts: []};\r\n    case POST_TOP_SUCCESS:\r\n      return {loading: false, posts: action.payload};\r\n    case POST_TOP_FAIL:\r\n      return {loading: false, error: action.payload};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_UPDATE_PROFILE_RESET,\r\n  USER_DETAILS_RESET,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_RESET,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_RESET,\r\n} from '../constants/userConstants';\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_LOGIN_REQUEST:\r\n      return {loading: true};\r\n    case USER_LOGIN_SUCCESS:\r\n      return {loading: false, userInfo: action.payload};\r\n    case USER_LOGIN_FAIL:\r\n      return {loading: false, error: action.payload};\r\n    case USER_LOGOUT:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_REGISTER_REQUEST:\r\n      return {loading: true};\r\n    case USER_REGISTER_SUCCESS:\r\n      return {loading: false, userInfo: action.payload};\r\n    case USER_REGISTER_FAIL:\r\n      return {loading: false, error: action.payload};\r\n    case USER_LOGOUT:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userDetailsReducer = (state = {user: {}}, action) => {\r\n  switch (action.type) {\r\n    case USER_DETAILS_REQUEST:\r\n      return {...state, loading: true};\r\n    case USER_DETAILS_SUCCESS:\r\n      return {loading: false, user: action.payload};\r\n    case USER_DETAILS_FAIL:\r\n      return {loading: false, error: action.payload};\r\n    case USER_DETAILS_RESET:\r\n      return {user: {}};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_PROFILE_REQUEST:\r\n      return {loading: true};\r\n    case USER_UPDATE_PROFILE_SUCCESS:\r\n      return {loading: false, success: true, userInfo: action.payload};\r\n    case USER_UPDATE_PROFILE_FAIL:\r\n      return {loading: false, error: action.payload};\r\n    case USER_UPDATE_PROFILE_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userListReducer = (state = {users: []}, action) => {\r\n  switch (action.type) {\r\n    case USER_LIST_REQUEST:\r\n      return {loading: true};\r\n    case USER_LIST_SUCCESS:\r\n      return {loading: false, users: action.payload};\r\n    case USER_LIST_FAIL:\r\n      return {loading: false, error: action.payload};\r\n    case USER_LIST_RESET:\r\n      return {users: []};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_DELETE_REQUEST:\r\n      return {loading: true};\r\n    case USER_DELETE_SUCCESS:\r\n      return {loading: false, success: true};\r\n    case USER_DELETE_FAIL:\r\n      return {loading: false, error: action.payload};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userUpdateReducer = (state = {user: {}}, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_REQUEST:\r\n      return {loading: true};\r\n    case USER_UPDATE_SUCCESS:\r\n      return {loading: false, success: true};\r\n    case USER_UPDATE_FAIL:\r\n      return {loading: false, error: action.payload};\r\n    case USER_UPDATE_RESET:\r\n      return {\r\n        user: {},\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from 'react';\r\nimport {Container, Row, Col} from 'react-bootstrap';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <Container>\r\n        <Row>\r\n          <Col className='text-center py-3'>\r\n            Copyright &copy; Pashtolarai-2021\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import axios from 'axios';\r\nimport {\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_REQUEST,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_REQUEST,\r\n} from '../constants/userConstants';\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LOGIN_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    const {data} = await axios.post(\r\n      '/api/users/login',\r\n      {email, password},\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem('userInfo');\r\n  dispatch({type: USER_LOGOUT});\r\n};\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    const {data} = await axios.post(\r\n      '/api/users',\r\n      {name, email, password},\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DETAILS_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: {userInfo},\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const {data} = await axios.get(`/api/users/${id}`, config);\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: {userInfo},\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const {data} = await axios.put(`/api/users/profile`, user, config);\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_SUCCESS,\r\n      payload: data,\r\n    });\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n    localStorage.setItem('userInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LIST_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: {userInfo},\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const {data} = await axios.get(`/api/users`, config);\r\n\r\n    dispatch({\r\n      type: USER_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: USER_LIST_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DELETE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: {userInfo},\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axios.delete(`/api/users/${id}`, config);\r\n\r\n    dispatch({type: USER_DELETE_SUCCESS});\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: USER_DELETE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: {userInfo},\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const {data} = await axios.put(`/api/users/${user._id}`, user, config);\r\n\r\n    dispatch({type: USER_UPDATE_SUCCESS});\r\n\r\n    dispatch({type: USER_DETAILS_SUCCESS, payload: data});\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: USER_UPDATE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n","import React from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\n\r\nimport {Link} from 'react-router-dom';\r\nimport {LinkContainer} from 'react-router-bootstrap';\r\nimport {Navbar, Nav, Image, NavDropdown} from 'react-bootstrap';\r\nimport {logout} from '../actions/userActions';\r\nconst Header = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const {userInfo} = userLogin;\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout());\r\n  };\r\n  return (\r\n    <Navbar bg='light' expand='lg'>\r\n      <Navbar.Brand className='ml-lg-5 text-uppercase'>\r\n        <Link to='/'>\r\n          <Image src='/logo.png' alt='logo' width='80' />\r\n        </Link>\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n      <Navbar.Collapse id='basic-navbar-nav' className='justify-content-end'>\r\n        <Nav className='mr-lg-5'>\r\n          <LinkContainer to='/'>\r\n            <Nav.Link className='active nav-link'>Home</Nav.Link>\r\n          </LinkContainer>\r\n          <LinkContainer to='/news'>\r\n            <Nav.Link>News</Nav.Link>\r\n          </LinkContainer>\r\n          <LinkContainer to='/sport'>\r\n            <Nav.Link>Sports</Nav.Link>\r\n          </LinkContainer>\r\n\r\n          <LinkContainer to='/health'>\r\n            <Nav.Link>Health</Nav.Link>\r\n          </LinkContainer>\r\n          <LinkContainer to='/story'>\r\n            <Nav.Link>Story</Nav.Link>\r\n          </LinkContainer>\r\n\r\n          {userInfo ? (\r\n            <NavDropdown title={userInfo.name} id='username'>\r\n              <LinkContainer to='/profile'>\r\n                <NavDropdown.Item>Profile</NavDropdown.Item>\r\n              </LinkContainer>\r\n              <NavDropdown.Item onClick={logoutHandler}>\r\n                Logout\r\n              </NavDropdown.Item>\r\n            </NavDropdown>\r\n          ) : (\r\n            <LinkContainer to='/login'>\r\n              <Nav.Link className='btn btn-outline-primary ml-3'>\r\n                Signup\r\n              </Nav.Link>\r\n            </LinkContainer>\r\n          )}\r\n          {userInfo && userInfo.isAdmin && (\r\n            <NavDropdown title='Admin' id='adminmenu'>\r\n              <LinkContainer to='/admin/userlist'>\r\n                <NavDropdown.Item>Users</NavDropdown.Item>\r\n              </LinkContainer>\r\n              <LinkContainer to='/admin/postlist'>\r\n                <NavDropdown.Item>Posts</NavDropdown.Item>\r\n              </LinkContainer>\r\n            </NavDropdown>\r\n          )}\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {faClock} from '@fortawesome/free-solid-svg-icons';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\n\r\nconst Post = ({post}) => {\r\n  return (\r\n    <>\r\n      <div className='card shadow-sm'>\r\n        <img src={post.image} className='card-img' alt='img' />\r\n\r\n        <div className='card-body'>\r\n          <h4>{post.name}</h4>\r\n\r\n          <p className='card-text'>{post.description.substring(0, 60)}...</p>\r\n          <div className='d-flex justify-content-between align-items-center'>\r\n            <div className='btn-group'>\r\n              <Link\r\n                to={`/post/${post._id}`}\r\n                className='btn btn-sm btn-outline-danger'\r\n              >\r\n                Read more...\r\n              </Link>\r\n            </div>\r\n            <small className='text-muted'>\r\n              <FontAwesomeIcon icon={faClock} /> {post.timeToRead} mins read{' '}\r\n              <br />\r\n              category:<span className='text-danger'>\r\n                {' '}\r\n                {post.category}\r\n              </span>{' '}\r\n            </small>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import axios from 'axios';\r\nimport {\r\n  POST_LIST_REQUEST,\r\n  POST_LIST_SUCCESS,\r\n  POST_LIST_FAIL,\r\n  POST_DETAILS_REQUEST,\r\n  POST_DETAILS_SUCCESS,\r\n  POST_DETAILS_FAIL,\r\n  POST_TOP_REQUEST,\r\n  POST_TOP_SUCCESS,\r\n  POST_TOP_FAIL,\r\n  POST_CREATE_REQUEST,\r\n  POST_CREATE_SUCCESS,\r\n  POST_CREATE_FAIL,\r\n  POST_UPDATE_REQUEST,\r\n  POST_UPDATE_SUCCESS,\r\n  POST_UPDATE_FAIL,\r\n  POST_DELETE_REQUEST,\r\n  POST_DELETE_SUCCESS,\r\n  POST_DELETE_FAIL,\r\n} from '../constants/postConstants';\r\nimport {logout} from '../actions/userActions';\r\n\r\nexport const listPosts = (keyword = '', pageNumber = '') => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    dispatch({type: POST_LIST_REQUEST});\r\n\r\n    const {data} = await axios.get(\r\n      `/api/posts?keyword=${keyword}&pageNumber=${pageNumber}`\r\n    );\r\n\r\n    dispatch({\r\n      type: POST_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POST_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listPostDetails = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({type: POST_DETAILS_REQUEST});\r\n\r\n    const {data} = await axios.get(`/api/posts/${id}`);\r\n\r\n    dispatch({\r\n      type: POST_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POST_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deletePost = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: POST_DELETE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: {userInfo},\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axios.delete(`/api/posts/${id}`, config);\r\n\r\n    dispatch({\r\n      type: POST_DELETE_SUCCESS,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: POST_DELETE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createPost = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: POST_CREATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: {userInfo},\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const {data} = await axios.post(`/api/posts`, {}, config);\r\n\r\n    dispatch({\r\n      type: POST_CREATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: POST_CREATE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updatePost = (post) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: POST_UPDATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: {userInfo},\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const {data} = await axios.put(`/api/posts/${post._id}`, post, config);\r\n\r\n    dispatch({\r\n      type: POST_UPDATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: POST_UPDATE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listTopPosts = () => async (dispatch) => {\r\n  try {\r\n    dispatch({type: POST_TOP_REQUEST});\r\n\r\n    const {data} = await axios.get(`/api/posts/top`);\r\n\r\n    dispatch({\r\n      type: POST_TOP_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POST_TOP_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","import React from 'react';\r\nimport {Alert} from 'react-bootstrap';\r\n\r\nconst Message = ({variant, children}) => {\r\n  return <Alert variant={variant}>{children}</Alert>;\r\n};\r\n\r\nMessage.defaultProps = {\r\n  variant: 'info',\r\n};\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport {Spinner} from 'react-bootstrap';\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <Spinner\r\n      animation='border'\r\n      role='status'\r\n      style={{\r\n        width: '100px',\r\n        height: '100px',\r\n        margin: 'auto',\r\n        display: 'block',\r\n      }}\r\n    >\r\n      <span className='sr-only'>Loading...</span>\r\n    </Spinner>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React from 'react';\r\nimport {Pagination} from 'react-bootstrap';\r\nimport {LinkContainer} from 'react-router-bootstrap';\r\n\r\nconst Paginate = ({pages, page, isAdmin = false, keyword = ''}) => {\r\n  return (\r\n    pages > 1 && (\r\n      <Pagination className='mt-3'>\r\n        {[...Array(pages).keys()].map((x) => (\r\n          <LinkContainer\r\n            key={x + 1}\r\n            to={\r\n              !isAdmin\r\n                ? keyword\r\n                  ? `/search/${keyword}/page/${x + 1}`\r\n                  : `/page/${x + 1}`\r\n                : `/admin/productlist/${x + 1}`\r\n            }\r\n          >\r\n            <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n          </LinkContainer>\r\n        ))}\r\n      </Pagination>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Paginate;\r\n","import React, {useEffect} from 'react';\r\n// import {Link} from 'react-router-dom';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport Post from '../components/Post';\r\nimport {listPosts} from '../actions/postActions';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport Paginate from '../components/Paginate';\r\nconst HomeScreen = ({match}) => {\r\n  const keyword = match.params.keyword;\r\n\r\n  const pageNumber = match.params.pageNumber || 1;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const postList = useSelector((state) => state.postList);\r\n  const {loading, error, posts, page, pages} = postList;\r\n\r\n  useEffect(() => {\r\n    dispatch(listPosts(keyword, pageNumber));\r\n  }, [dispatch, keyword, pageNumber]);\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <div className='album py-2 bg-light'>\r\n          <div className='container'>\r\n            <div className='row row-cols-1 row-cols-sm-2 row-cols-md-2'>\r\n              {posts.map((post) => (\r\n                <div key={post._id} className='col'>\r\n                  <Post post={post} />\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <Paginate\r\n              pages={pages}\r\n              page={page}\r\n              keyword={keyword ? keyword : ''}\r\n            />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","import React, {useEffect} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport Loader from './Loader';\r\nimport Message from './Message';\r\nimport {listTopPosts} from '../actions/postActions';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faClock} from '@fortawesome/free-solid-svg-icons';\r\nconst TopRated = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const postTopRated = useSelector((state) => state.postTopRated);\r\n  const {loading, error, posts} = postTopRated;\r\n\r\n  useEffect(() => {\r\n    dispatch(listTopPosts());\r\n  }, [dispatch]);\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <div className='container'>\r\n          <div className='album py-2'>\r\n            <div className='container'>\r\n              <div className='row row-cols-1 row-cols-sm-4 row-cols-md-4'>\r\n                {posts.map((post) => (\r\n                  <div className='card shadow-sm mr-3 justify-content-center'>\r\n                    <img src={post.image} className='img-fluid' alt='img' />\r\n\r\n                    <div className='card-body'>\r\n                      <h4>{post.name}</h4>\r\n\r\n                      <p className='card-text'>\r\n                        {post.description.substring(0, 60)}...\r\n                      </p>\r\n                      <div className='d-flex justify-content-between align-items-center'>\r\n                        <div className='btn-group'>\r\n                          <Link\r\n                            to={`/post/${post._id}`}\r\n                            className='btn btn-sm btn-outline-danger'\r\n                          >\r\n                            Read more...\r\n                          </Link>\r\n                        </div>\r\n                        <small className='text-muted'>\r\n                          <FontAwesomeIcon icon={faClock} /> {post.timeToRead}{' '}\r\n                          mins read <br />\r\n                          category:\r\n                          <span className='text-danger'>\r\n                            {' '}\r\n                            {post.category}\r\n                          </span>{' '}\r\n                        </small>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TopRated;\r\n","import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport {listPostDetails} from '../actions/postActions';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\n\r\nimport {\r\n  faFacebook,\r\n  faInstagram,\r\n  faTwitter,\r\n} from '@fortawesome/free-brands-svg-icons';\r\nimport TopRated from '../components/TopRated';\r\n\r\nconst PostsScreen = ({match}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const postDetails = useSelector((state) => state.postDetails);\r\n  const {loading, error, post} = postDetails;\r\n\r\n  useEffect(() => {\r\n    dispatch(listPostDetails(match.params.id));\r\n  }, [dispatch, match]);\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <>\r\n          <div className='container py-5 px-5 mt-5'>\r\n            <div className='row featurette '>\r\n              <div className='col-md-12'>\r\n                <h2 className='featurette-heading'>\r\n                  {post.name} <span className='text-muted'> </span>\r\n                </h2>\r\n                <p className='lead'>{post.description}</p>\r\n              </div>\r\n              <div className='col-md-12'>\r\n                <img src={post.image} alt={post.name} className='card-img' />\r\n              </div>\r\n            </div>\r\n            <hr className='featurette-divider'></hr>\r\n            <div className='row featurette'>\r\n              <div className='col-md-12'>\r\n                <p className='lead'>{post.descriptionDetails}</p>\r\n              </div>\r\n              <div className='col-md-12'>\r\n                <img src={post.images} alt={post.name} className='card-img' />\r\n              </div>\r\n            </div>\r\n            <div className='container text-center'>\r\n              <small>Share it</small> <br />\r\n              <a href='www.facebook.com' className='btn btn-outline-primary'>\r\n                <FontAwesomeIcon icon={faFacebook} />\r\n              </a>\r\n              <a\r\n                href='www.instagram.com'\r\n                className='btn btn-outline-secondary ml-2'\r\n              >\r\n                <FontAwesomeIcon icon={faInstagram} />\r\n              </a>\r\n              <a\r\n                href='www.twitter.com'\r\n                className='btn btn-outline-primary ml-2'\r\n              >\r\n                <FontAwesomeIcon icon={faTwitter} />\r\n              </a>\r\n            </div>\r\n            <hr />\r\n          </div>\r\n        </>\r\n      )}\r\n      <h1 className='text-center'>Latest Posts</h1>\r\n      <div className='container justify-content-center mr-5'>\r\n        <div className='row'>\r\n          <TopRated />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostsScreen;\r\n","import React from 'react';\r\nimport {Container, Row, Col} from 'react-bootstrap';\r\n\r\nconst FormContainer = ({children}) => {\r\n  return (\r\n    <Container>\r\n      <Row className='justify-content-md-center mt-5'>\r\n        <Col xs={12} md={6}>\r\n          {children}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default FormContainer;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {Form, Button, Row, Col} from 'react-bootstrap';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport FormContainer from '../components/FormContainer';\r\nimport {login} from '../actions/userActions';\r\n\r\nconst LoginScreen = ({location, history}) => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const {loading, error, userInfo} = userLogin;\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/';\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [history, userInfo, redirect]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(login(email, password));\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1 className='text-center'>Sign In</h1>\r\n      {error && <Message variant='danger'>{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='email'>\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Enter email'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='password'>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter password'\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Sign In\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row className='py-3'>\r\n        <Col>\r\n          New Customer?{' '}\r\n          <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n            Register\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {Form, Button, Row, Col} from 'react-bootstrap';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport FormContainer from '../components/FormContainer';\r\nimport {register} from '../actions/userActions';\r\n\r\nconst RegisterScreen = ({location, history}) => {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userRegister = useSelector((state) => state.userRegister);\r\n  const {loading, error, userInfo} = userRegister;\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/';\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [history, userInfo, redirect]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match');\r\n    } else {\r\n      dispatch(register(name, email, password));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1 className='text-center'>Sign Up</h1>\r\n      {message && <Message variant='danger'>{message}</Message>}\r\n      {error && <Message variant='danger'>{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='name'>\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            type='name'\r\n            placeholder='Enter name'\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='email'>\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Enter email'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='password'>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter password'\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='confirmPassword'>\r\n          <Form.Label>Confirm Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Confirm password'\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Register\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row className='py-3'>\r\n        <Col>\r\n          Have an Account?{' '}\r\n          <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n            Login\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default RegisterScreen;\r\n","import React, {useEffect} from 'react';\r\nimport {LinkContainer} from 'react-router-bootstrap';\r\nimport {Table, Button, Row, Col, Container} from 'react-bootstrap';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport Paginate from '../components/Paginate';\r\nimport {listPosts, createPost, deletePost} from '../actions/postActions';\r\nimport {POST_CREATE_RESET} from '../constants/postConstants';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faEdit, faTrash, faPlus} from '@fortawesome/free-solid-svg-icons';\r\nconst PostListScreen = ({history, match}) => {\r\n  const pageNumber = match.params.pageNumber || 1;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const postList = useSelector((state) => state.postList);\r\n  const {loading, error, posts, page, pages} = postList;\r\n\r\n  const postDelete = useSelector((state) => state.postDelete);\r\n  const {\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n    success: successDelete,\r\n  } = postDelete;\r\n\r\n  const postCreate = useSelector((state) => state.postCreate);\r\n  const {\r\n    loading: loadingCreate,\r\n    error: errorCreate,\r\n    success: successCreate,\r\n    post: createdPost,\r\n  } = postCreate;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const {userInfo} = userLogin;\r\n\r\n  useEffect(() => {\r\n    dispatch({type: POST_CREATE_RESET});\r\n\r\n    if (!userInfo || !userInfo.isAdmin) {\r\n      history.push('/login');\r\n    }\r\n\r\n    if (successCreate) {\r\n      history.push(`/admin/post/${createdPost._id}/edit`);\r\n    } else {\r\n      dispatch(listPosts('', pageNumber));\r\n    }\r\n  }, [\r\n    dispatch,\r\n    history,\r\n    userInfo,\r\n    successDelete,\r\n    successCreate,\r\n    createdPost,\r\n    pageNumber,\r\n  ]);\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Are you sure')) {\r\n      dispatch(deletePost(id));\r\n    }\r\n  };\r\n\r\n  const createPostHandler = () => {\r\n    dispatch(createPost());\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Row className='align-items-center'>\r\n          <Col>\r\n            <h1>Posts</h1>\r\n          </Col>\r\n          <Col className='text-right'>\r\n            <Button className='my-3' onClick={createPostHandler}>\r\n              <FontAwesomeIcon icon={faPlus} /> Create Post\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n        {loadingDelete && <Loader />}\r\n        {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n        {loadingCreate && <Loader />}\r\n        {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <>\r\n            <Table striped bordered hover responsive className='table-sm'>\r\n              <thead>\r\n                <tr>\r\n                  <th>NAME</th>\r\n                  <th>Description</th>\r\n                  <th>CATEGORY</th>\r\n\r\n                  <th></th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {posts.map((post) => (\r\n                  <tr key={post._id}>\r\n                    <td>{post.name}</td>\r\n                    <td>{post.description.substring(0, 40)}</td>\r\n                    <td>{post.category}</td>\r\n\r\n                    <td>\r\n                      <LinkContainer to={`/admin/post/${post._id}/edit`}>\r\n                        <Button variant='light' className='btn-sm'>\r\n                          <FontAwesomeIcon icon={faEdit} />\r\n                        </Button>\r\n                      </LinkContainer>\r\n                      <Button\r\n                        variant='danger'\r\n                        className='btn-sm ml-2'\r\n                        onClick={() => deleteHandler(post._id)}\r\n                      >\r\n                        <FontAwesomeIcon icon={faTrash} />\r\n                      </Button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n            <Paginate pages={pages} page={page} isAdmin={true} />\r\n          </>\r\n        )}\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostListScreen;\r\n","import axios from 'axios';\r\nimport React, {useState, useEffect} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {Form, Button} from 'react-bootstrap';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport FormContainer from '../components/FormContainer';\r\nimport {listPostDetails, updatePost} from '../actions/postActions';\r\nimport {POST_UPDATE_RESET} from '../constants/postConstants';\r\n\r\nconst PostEditScreen = ({match, history}) => {\r\n  const postId = match.params.id;\r\n\r\n  const [name, setName] = useState('');\r\n  const [image, setImage] = useState('');\r\n  const [category, setCategory] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [images, setImages] = useState('');\r\n  const [descriptionDetails, setDescriptionDetails] = useState('');\r\n  const [timeToRead, setTimeToRead] = useState(0);\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const postDetails = useSelector((state) => state.postDetails);\r\n  const {loading, error, post} = postDetails;\r\n\r\n  const postUpdate = useSelector((state) => state.postUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = postUpdate;\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({type: POST_UPDATE_RESET});\r\n      history.push('/admin/postlist');\r\n    } else {\r\n      if (!post.name || post._id !== postId) {\r\n        dispatch(listPostDetails(postId));\r\n      } else {\r\n        setName(post.name);\r\n        setImage(post.image);\r\n        setCategory(post.category);\r\n        setDescription(post.description);\r\n        setImages(post.images);\r\n        setDescriptionDetails(post.descriptionDetails);\r\n        setTimeToRead(post.timeToRead);\r\n      }\r\n    }\r\n  }, [dispatch, history, postId, post, successUpdate]);\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append('image', file);\r\n    setUploading(true);\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      };\r\n\r\n      const {data} = await axios.post('/api/upload', formData, config);\r\n\r\n      setImage(data);\r\n      setUploading(false);\r\n    } catch (error) {\r\n      console.error(error);\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      updatePost({\r\n        _id: postId,\r\n        name,\r\n        image,\r\n        category,\r\n        description,\r\n        images,\r\n        descriptionDetails,\r\n        timeToRead,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Link to='/admin/postlist' className='btn btn-light my-3'>\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit Post</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter name'\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='image'>\r\n              <Form.Label>Image</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter image url'\r\n                value={image}\r\n                onChange={(e) => setImage(e.target.value)}\r\n              ></Form.Control>\r\n              <Form.File\r\n                id='image-file'\r\n                label='Choose File'\r\n                custom\r\n                onChange={uploadFileHandler}\r\n              ></Form.File>\r\n              {uploading && <Loader />}\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='category'>\r\n              <Form.Label>Category</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter category'\r\n                value={category}\r\n                onChange={(e) => setCategory(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='description'>\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n                as='textarea'\r\n                size='lg'\r\n                placeholder='Enter description'\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId='images'>\r\n              <Form.Label>Your Second Image</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter image url'\r\n                value={images}\r\n                onChange={(e) => setImage(e.target.value)}\r\n              ></Form.Control>\r\n              <Form.File\r\n                id='image-file'\r\n                label='Choose File'\r\n                custom\r\n                onChange={uploadFileHandler}\r\n              ></Form.File>\r\n              {uploading && <Loader />}\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='descriptionDetails'>\r\n              <Form.Label>Description Details</Form.Label>\r\n              <Form.Control\r\n                as='textarea'\r\n                size='lg'\r\n                placeholder='Enter description Detials'\r\n                value={descriptionDetails}\r\n                onChange={(e) => setDescriptionDetails(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='description'>\r\n              <Form.Label>Time To Read</Form.Label>\r\n              <Form.Control\r\n                type='number'\r\n                placeholder='Enter Reading Time'\r\n                value={timeToRead}\r\n                onChange={(e) => setTimeToRead(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostEditScreen;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {Form, Button, Row, Col, Container} from 'react-bootstrap';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport {getUserDetails, updateUserProfile} from '../actions/userActions';\r\nimport {USER_UPDATE_PROFILE_RESET} from '../constants/userConstants';\r\n\r\nconst ProfileScreen = ({location, history}) => {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const {loading, error, user} = userDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const {userInfo} = userLogin;\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\r\n  const {success} = userUpdateProfile;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login');\r\n    } else {\r\n      if (!user || !user.name || success) {\r\n        dispatch({type: USER_UPDATE_PROFILE_RESET});\r\n        dispatch(getUserDetails('profile'));\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n      }\r\n    }\r\n  }, [dispatch, history, userInfo, user, success]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match');\r\n    } else {\r\n      dispatch(updateUserProfile({id: user._id, name, email, password}));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col md={3}>\r\n          <h2>User Profile</h2>\r\n          {message && <Message variant='danger'>{message}</Message>}\r\n          {}\r\n          {success && <Message variant='success'>Profile Updated</Message>}\r\n          {loading ? (\r\n            <Loader />\r\n          ) : error ? (\r\n            <Message variant='danger'>{error}</Message>\r\n          ) : (\r\n            <Form onSubmit={submitHandler}>\r\n              <Form.Group controlId='name'>\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control\r\n                  type='name'\r\n                  placeholder='Enter name'\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId='email'>\r\n                <Form.Label>Email Address</Form.Label>\r\n                <Form.Control\r\n                  type='email'\r\n                  placeholder='Enter email'\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId='password'>\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control\r\n                  type='password'\r\n                  placeholder='Enter password'\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId='confirmPassword'>\r\n                <Form.Label>Confirm Password</Form.Label>\r\n                <Form.Control\r\n                  type='password'\r\n                  placeholder='Confirm password'\r\n                  value={confirmPassword}\r\n                  onChange={(e) => setConfirmPassword(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n\r\n              <Button type='submit' variant='primary'>\r\n                Update\r\n              </Button>\r\n            </Form>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n","import React, {useEffect} from 'react';\r\nimport {LinkContainer} from 'react-router-bootstrap';\r\nimport {Table, Button, Container} from 'react-bootstrap';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport {listUsers, deleteUser} from '../actions/userActions';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faCheck,\r\n  faEdit,\r\n  faTimes,\r\n  faTrash,\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst UserListScreen = ({history}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const userList = useSelector((state) => state.userList);\r\n  const {loading, error, users} = userList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const {userInfo} = userLogin;\r\n\r\n  const userDelete = useSelector((state) => state.userDelete);\r\n  const {success: successDelete} = userDelete;\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listUsers());\r\n    } else {\r\n      history.push('/login');\r\n    }\r\n  }, [dispatch, history, successDelete, userInfo]);\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Are you sure')) {\r\n      dispatch(deleteUser(id));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <h1>Users</h1>\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <Table striped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>NAME</th>\r\n                <th>EMAIL</th>\r\n                <th>ADMIN</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {users.map((user) => (\r\n                <tr key={user._id}>\r\n                  <td>{user._id}</td>\r\n                  <td>{user.name}</td>\r\n                  <td>\r\n                    <a href={`mailto:${user.email}`}>{user.email}</a>\r\n                  </td>\r\n                  <td>\r\n                    {user.isAdmin ? (\r\n                      <FontAwesomeIcon\r\n                        icon={faCheck}\r\n                        style={{color: 'green'}}\r\n                      ></FontAwesomeIcon>\r\n                    ) : (\r\n                      <FontAwesomeIcon\r\n                        icon={faTimes}\r\n                        style={{color: 'red'}}\r\n                      ></FontAwesomeIcon>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                      <Button variant='light' className='btn-sm mr-2'>\r\n                        <FontAwesomeIcon icon={faEdit} />\r\n                      </Button>\r\n                    </LinkContainer>\r\n                    <Button\r\n                      variant='danger'\r\n                      className='btn-sm'\r\n                      onClick={() => deleteHandler(user._id)}\r\n                    >\r\n                      <FontAwesomeIcon icon={faTrash} />\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserListScreen;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {Form, Button, Container} from 'react-bootstrap';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport FormContainer from '../components/FormContainer';\r\nimport {getUserDetails, updateUser} from '../actions/userActions';\r\nimport {USER_UPDATE_RESET} from '../constants/userConstants';\r\n\r\nconst UserEditScreen = ({match, history}) => {\r\n  const userId = match.params.id;\r\n\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const {loading, error, user} = userDetails;\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = userUpdate;\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({type: USER_UPDATE_RESET});\r\n      history.push('/admin/userlist');\r\n    } else {\r\n      if (!user.name || user._id !== userId) {\r\n        dispatch(getUserDetails(userId));\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n        setIsAdmin(user.isAdmin);\r\n      }\r\n    }\r\n  }, [dispatch, history, userId, user, successUpdate]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(updateUser({_id: userId, name, email, isAdmin}));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Link to='/admin/userlist' className='btn btn-light my-3'>\r\n          Go Back\r\n        </Link>\r\n        <FormContainer>\r\n          <h1>Edit User</h1>\r\n          {loadingUpdate && <Loader />}\r\n          {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n          {loading ? (\r\n            <Loader />\r\n          ) : error ? (\r\n            <Message variant='danger'>{error}</Message>\r\n          ) : (\r\n            <Form onSubmit={submitHandler}>\r\n              <Form.Group controlId='name'>\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control\r\n                  type='name'\r\n                  placeholder='Enter name'\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId='email'>\r\n                <Form.Label>Email Address</Form.Label>\r\n                <Form.Control\r\n                  type='email'\r\n                  placeholder='Enter email'\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId='isadmin'>\r\n                <Form.Check\r\n                  type='checkbox'\r\n                  label='Is Admin'\r\n                  checked={isAdmin}\r\n                  onChange={(e) => setIsAdmin(e.target.checked)}\r\n                ></Form.Check>\r\n              </Form.Group>\r\n\r\n              <Button type='submit' variant='primary'>\r\n                Update\r\n              </Button>\r\n            </Form>\r\n          )}\r\n        </FormContainer>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserEditScreen;\r\n","import React from 'react';\r\n\r\nconst RoutesContainer = ({children}) => {\r\n  return (\r\n    <div className='album py-2 bg-light'>\r\n      <div className='container'>\r\n        <div className='row row-cols-1 row-cols-sm-2 row-cols-md-2'>\r\n          {children}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RoutesContainer;\r\n","import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faClock} from '@fortawesome/free-solid-svg-icons';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport {listPosts} from '../actions/postActions';\r\nimport RoutesContainer from '../components/RoutesContainer';\r\nconst HealthScreen = ({match}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const postList = useSelector((state) => state.postList);\r\n  const {loading, error, posts} = postList;\r\n\r\n  useEffect(() => {\r\n    dispatch(listPosts());\r\n  }, [dispatch]);\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <RoutesContainer>\r\n          {posts.map((post) => (\r\n            <>\r\n              {post.category === 'health' ? (\r\n                <div className='col'>\r\n                  <div className='card shadow-sm'>\r\n                    <img src={post.image} className='card-img' alt='img' />\r\n\r\n                    <div className='card-body'>\r\n                      <h4>{post.name}</h4>\r\n\r\n                      <p className='card-text'>\r\n                        {post.description.substring(0, 60)}...\r\n                      </p>\r\n                      <div className='d-flex justify-content-between align-items-center'>\r\n                        <div className='btn-group'>\r\n                          <Link\r\n                            to={`/post/${post._id}`}\r\n                            className='btn btn-sm btn-outline-danger'\r\n                          >\r\n                            Read more...\r\n                          </Link>\r\n                        </div>\r\n                        <small className='text-muted'>\r\n                          <FontAwesomeIcon icon={faClock} /> {post.timeToRead}{' '}\r\n                          mins read <br />\r\n                          category:\r\n                          <span className='text-danger'>\r\n                            {' '}\r\n                            {post.category}\r\n                          </span>{' '}\r\n                        </small>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                ''\r\n              )}\r\n            </>\r\n          ))}\r\n        </RoutesContainer>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HealthScreen;\r\n","import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faClock} from '@fortawesome/free-solid-svg-icons';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport {listPosts} from '../actions/postActions';\r\nimport RoutesContainer from '../components/RoutesContainer';\r\n\r\nconst NewsScreen = ({match}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const postList = useSelector((state) => state.postList);\r\n  const {loading, error, posts} = postList;\r\n\r\n  useEffect(() => {\r\n    dispatch(listPosts());\r\n  }, [dispatch]);\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <RoutesContainer>\r\n          {posts.map((post) => (\r\n            <>\r\n              {post.category === 'news' ? (\r\n                <div className='col'>\r\n                  <div className='card shadow-sm'>\r\n                    <img src={post.image} className='card-img' alt='img' />\r\n\r\n                    <div className='card-body'>\r\n                      <h4>{post.name}</h4>\r\n\r\n                      <p className='card-text'>\r\n                        {post.description.substring(0, 60)}...\r\n                      </p>\r\n                      <div className='d-flex justify-content-between align-items-center'>\r\n                        <div className='btn-group'>\r\n                          <Link\r\n                            to={`/post/${post._id}`}\r\n                            className='btn btn-sm btn-outline-danger'\r\n                          >\r\n                            Read more...\r\n                          </Link>\r\n                        </div>\r\n                        <small className='text-muted'>\r\n                          <FontAwesomeIcon icon={faClock} /> {post.timeToRead}{' '}\r\n                          mins read <br />\r\n                          category:\r\n                          <span className='text-danger'>\r\n                            {' '}\r\n                            {post.category}\r\n                          </span>{' '}\r\n                        </small>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                ''\r\n              )}\r\n            </>\r\n          ))}\r\n        </RoutesContainer>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewsScreen;\r\n","import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faClock} from '@fortawesome/free-solid-svg-icons';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport {listPosts} from '../actions/postActions';\r\nimport RoutesContainer from '../components/RoutesContainer';\r\nconst StoryScreen = ({match}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const postList = useSelector((state) => state.postList);\r\n  const {loading, error, posts} = postList;\r\n\r\n  useEffect(() => {\r\n    dispatch(listPosts());\r\n  }, [dispatch]);\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <RoutesContainer>\r\n          {posts.map((post) => (\r\n            <>\r\n              {post.category === 'story' ? (\r\n                <div className='col'>\r\n                  <div className='card shadow-sm'>\r\n                    <img src={post.image} className='card-img' alt='img' />\r\n\r\n                    <div className='card-body'>\r\n                      <h4>{post.name}</h4>\r\n\r\n                      <p className='card-text'>\r\n                        {post.description.substring(0, 60)}...\r\n                      </p>\r\n                      <div className='d-flex justify-content-between align-items-center'>\r\n                        <div className='btn-group'>\r\n                          <Link\r\n                            to={`/post/${post._id}`}\r\n                            className='btn btn-sm btn-outline-danger'\r\n                          >\r\n                            Read more...\r\n                          </Link>\r\n                        </div>\r\n                        <small className='text-muted'>\r\n                          <FontAwesomeIcon icon={faClock} /> {post.timeToRead}{' '}\r\n                          mins read <br />\r\n                          category:\r\n                          <span className='text-danger'>\r\n                            {' '}\r\n                            {post.category}\r\n                          </span>{' '}\r\n                        </small>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                ''\r\n              )}\r\n            </>\r\n          ))}\r\n        </RoutesContainer>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StoryScreen;\r\n","import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faClock} from '@fortawesome/free-solid-svg-icons';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport {listPosts} from '../actions/postActions';\r\nimport RoutesContainer from '../components/RoutesContainer';\r\nconst SportScreen = ({match}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const postList = useSelector((state) => state.postList);\r\n  const {loading, error, posts} = postList;\r\n\r\n  useEffect(() => {\r\n    dispatch(listPosts());\r\n  }, [dispatch]);\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <RoutesContainer>\r\n          {posts.map((post) => (\r\n            <>\r\n              {post.category === 'sport' ? (\r\n                <div className='col'>\r\n                  <div className='card shadow-sm'>\r\n                    <img src={post.image} className='card-img' alt='img' />\r\n\r\n                    <div className='card-body'>\r\n                      <h4>{post.name}</h4>\r\n\r\n                      <p className='card-text'>\r\n                        {post.description.substring(0, 60)}...\r\n                      </p>\r\n                      <div className='d-flex justify-content-between align-items-center'>\r\n                        <div className='btn-group'>\r\n                          <Link\r\n                            to={`/post/${post._id}`}\r\n                            className='btn btn-sm btn-outline-danger'\r\n                          >\r\n                            Read more...\r\n                          </Link>\r\n                        </div>\r\n                        <small className='text-muted'>\r\n                          <FontAwesomeIcon icon={faClock} /> {post.timeToRead}{' '}\r\n                          mins read <br />\r\n                          category:\r\n                          <span className='text-danger'>\r\n                            {' '}\r\n                            {post.category}\r\n                          </span>{' '}\r\n                        </small>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                ''\r\n              )}\r\n            </>\r\n          ))}\r\n        </RoutesContainer>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SportScreen;\r\n","import React from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport Footer from './components/Footer';\nimport Header from './components/Header';\nimport HomeScreen from './screens/HomeScreen';\nimport PostsScreen from './screens/PostsScreen';\nimport LoginScreen from './screens/LoginScreen';\nimport RegisterScreen from './screens/RegisterScreen';\nimport PostListScreen from './screens/PostListScreen';\nimport PostEditScreen from './screens/PostEditScreen';\nimport ProfileScreen from './screens/ProfileScreen';\nimport UserListScreen from './screens/UserListScreen';\nimport UserEditScreen from './screens/UserEditScreen';\nimport HealthScreen from './screens/HealthScreen';\nimport NewsScreen from './screens/NewsScreen';\nimport StoryScreen from './screens/StoryScreen';\nimport SportScreen from './screens/SportScreen';\n\nfunction App() {\n  return (\n    <Router>\n      <main>\n        <Header />\n\n        <div className=''>\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          <Route path='/profile' component={ProfileScreen} />\n          <Route path='/health' component={HealthScreen} exact />\n          <Route path='/news' component={NewsScreen} exact />\n          <Route path='/story' component={StoryScreen} exact />\n          <Route path='/sport' component={SportScreen} exact />\n          <Route path='/admin/userlist' component={UserListScreen} />\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n          <Route path='/post/:id' component={PostsScreen} />\n          <Route path='/admin/postlist' component={PostListScreen} exact />\n          <Route\n            path='/admin/postlist/:pageNumber'\n            component={PostListScreen}\n            exact\n          />\n          <Route path='/admin/post/:id/edit' component={PostEditScreen} />\n          <Route path='/search/:keyword' component={HomeScreen} exact />\n          <Route path='/page/:pageNumber' component={HomeScreen} exact />\n          <Route\n            path='/search/:keyword/page/:pageNumber'\n            component={HomeScreen}\n            exact\n          />\n          <Route path='/' component={HomeScreen} exact />\n        </div>\n      </main>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport store from './store';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}